import React, { useState } from 'react';
import { Card, CardContent, CardHeader } from '@/components/ui/card';
import { Button } from '@/components/ui/button';

// Career recommendation data
const CAREERS = [
  {
    name: 'Data Scientist',
    description: 'Analyzes complex data to uncover insights and drive decision-making.',
    image: '/api/placeholder/400/300',
    traits: ['analytical', 'technical', 'problem-solving']
  },
  {
    name: 'Environmental Lawyer',
    description: 'Advocates for environmental protection through legal frameworks.',
    image: '/api/placeholder/400/300',
    traits: ['passionate', 'communicative', 'justice-oriented']
  },
  {
    name: 'Professional Athlete',
    description: 'Competes at the highest levels in a chosen sport.',
    image: '/api/placeholder/400/300',
    traits: ['competitive', 'disciplined', 'physically skilled']
  },
  {
    name: 'Digital Artist',
    description: 'Creates innovative visual content using digital tools and creativity.',
    image: '/api/placeholder/400/300',
    traits: ['creative', 'visionary', 'technical']
  },
  {
    name: 'Quantum Physicist',
    description: 'Explores fundamental principles of quantum mechanics and scientific research.',
    image: '/api/placeholder/400/300',
    traits: ['curious', 'analytical', 'innovative']
  }
];

const QUESTIONS = [
  {
    text: 'Which environment do you thrive in?',
    options: [
      { text: 'Fast-paced and dynamic', value: 'dynamic' },
      { text: 'Structured and methodical', value: 'structured' },
      { text: 'Creative and flexible', value: 'creative' }
    ]
  },
  {
    text: 'What drives you most?',
    options: [
      { text: 'Making a tangible impact', value: 'impact' },
      { text: 'Personal achievement', value: 'achievement' },
      { text: 'Solving complex problems', value: 'problem-solving' }
    ]
  },
  {
    text: 'How do you prefer to work?',
    options: [
      { text: 'Independently', value: 'independent' },
      { text: 'In collaborative teams', value: 'collaborative' },
      { text: 'With direct interaction with people', value: 'interactive' }
    ]
  }
];

const CareerRecommendationApp = () => {
  const [currentQuestion, setCurrentQuestion] = useState(0);
  const [answers, setAnswers] = useState([]);
  const [recommendedCareer, setRecommendedCareer] = useState(null);

  const handleAnswer = (value) => {
    const newAnswers = [...answers, value];
    setAnswers(newAnswers);

    if (currentQuestion < QUESTIONS.length - 1) {
      setCurrentQuestion(currentQuestion + 1);
    } else {
      recommendCareer(newAnswers);
    }
  };

  const recommendCareer = (selectedAnswers) => {
    // Simple recommendation logic based on answer traits
    const scoreCareer = (career) => {
      return career.traits.filter(trait => 
        selectedAnswers.some(answer => 
          ['dynamic', 'structured', 'creative'].includes(answer) && 
          trait.includes(answer)
        )
      ).length;
    };

    const bestCareer = CAREERS.reduce((best, current) => 
      scoreCareer(current) > scoreCareer(best) ? current : best
    );

    setRecommendedCareer(bestCareer);
  };

  const restart = () => {
    setCurrentQuestion(0);
    setAnswers([]);
    setRecommendedCareer(null);
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-900 to-blue-600 flex items-center justify-center p-4">
      <Card className="w-full max-w-md bg-white/90 backdrop-blur-sm shadow-2xl rounded-xl">
        {recommendedCareer && recommendedCareer.name === 'Digital Artist' ? (
          <div className="text-center p-6">
            <h2 className="text-2xl font-bold text-blue-900 mb-4">
              Your Recommended Career
            </h2>
            <img 
              src={recommendedCareer.image} 
              alt={recommendedCareer.name} 
              className="w-full h-48 object-cover rounded-xl mb-4"
            />
            <img 
              src="/api/image/digital-artist-image"
              alt="Digital Artist's Cozy Studio"
              className="w-full h-48 object-cover rounded-xl mb-4"
            />
            <h3 className="text-xl font-semibold text-blue-800">
              {recommendedCareer.name}
            </h3>
            <p className="text-gray-600 mt-2 mb-4">
              {recommendedCareer.description}
            </p>
            <Button onClick={restart} className="bg-blue-500 hover:bg-blue-600 text-white">
              Try Again
            </Button>
          </div>
        ) : (
          <>
            <CardHeader className="text-center pb-0">
              <h2 className="text-2xl font-bold text-blue-900">
                Career Discovery
              </h2>
              <p className="text-gray-600 mt-2">
                Find your ideal professional path
              </p>
            </CardHeader>
            <CardContent className="pt-6">
              <div className="text-center mb-6">
                <h3 className="text-xl font-semibold text-blue-800 mb-4">
                  {QUESTIONS[currentQuestion].text}
                </h3>
                <div className="space-y-4">
                  {QUESTIONS[currentQuestion].options.map((option, index) => (
                    <Button
                      key={index}
                      onClick={() => handleAnswer(option.value)}
                      className="w-full bg-blue-500 hover:bg-blue-600 text-white"
                    >
                      {option.text}
                    </Button>
                  ))}
                </div>
              </div>
            </CardContent>
          </>
        )}
      </Card>
    </div>
  );
};

export default CareerRecommendationApp;


